@mixin placeholder($color) {
	&::-webkit-input-placeholder {
		color: $color;
		font-weight: light;

		.safari & {
			line-height: normal;
		}
	}
	&::-moz-placeholder {
		color: $color;
		font-weight: light;
	}
	&:-ms-input-placeholder {
		color: $color;
		font-weight: light;
	}
	&:-moz-placeholder {
		color: $color;
		font-weight: light;
	}
}

@mixin inputStyles() {
	position: relative;
	z-index: 1;
	border-radius: 4px;
	border: 1px solid colour('input-border');
	display: block;
	padding: 18px 15px 14px;
	appearance: none;
	background-color: colour('input-background');
	font-size: 0.875rem;
	line-height: 1;
	height: 45px;
	font-family: font-stack('body');
	font-weight: 400;
	color: colour('primary');
	box-shadow: none;
	box-sizing: border-box;
	width: 100%;
	transition: all .2s ease;

	&::-ms-clear {
		display: none;
	}

	&:-webkit-autofill {
		-webkit-box-shadow: 0 0 0px 1000px white inset;
	}

	// Readonly state
	&.readonly {
		border-color: transparent;
	}

	// Half size
	.half-size & {
		width: 50%;
	}

	// Focus state
	&:focus,
	.is-focused & {
		outline: none;
		// border-color: colour('input-focus');
		// color: colour('input-text');
		// @include placeholder(colour('input-placeholder-focus'));
	}

	// Checked
	&.checked {
		outline: none;
		// border-color: colour('bupa');
		// color: colour('bupa');
	}

	// Disabled state
	&:disabled,
	&.disabled,
	.disabled & {
		outline: none;
		opacity: .34;
		pointer-events: none;

		&.readonly {
			opacity: 1;
		}
	}

	// Invalid
	.invalid & {
		color: colour('error');
		@include placeholder(colour('error'));

		// Focus state
		&:focus,
		.is-focused & {
			outline: none;
		}
	}
}
