//
// Modernizar mixin for easily outputting code depending on Modernzir support
// @param {list} $features - List of features to output
// @param {bool} $supports - Whether to output the `no-` prefixed variants or the chained support properties
// @link https://github.com/danielguillan/modernizr-mixin
// @author Daniel Guillan
//
@mixin _modernizr($features, $supports) {

	$everything-okay: true;

	// Use the 'no-' prefix if checking for unsuported features (e.g. `.no-translate3d`)
	$prefix: if($supports, '', 'no-');

	// Features selector
	// a) create a string if checking for supported features. We'll concatenate class names later on (e.g. `.translate3d.opacity selector`)
	// b) create a list if checking for unsuported features. We'll append the class names later on (e.g. `.no-js selector, .no-translate3d selector`)
	$selector: if($supports, '', (unquote('.no-js &')));

	// The placeholder (e.g. `%yep-translate3d` or `%nope-opacity`)
	$placeholder: if($supports, '%yep', '%nope');


	// 1.1 Generate placeholder and selectors
	// =====================================

	@each $feature in $features {

		// Making sure $feature is a string
		@if type-of($feature) != string {

			$everything-okay: false;
			@warn '`#{$feature} is not a string for `modernizr`';

		} @else {

			// Add feature name to the placeholder string (e.g. '%yep' + '-' + 'translate3d' or '%nope' + '-' + 'translate3d')
			$placeholder: $placeholder + '-' + $feature;

			// Define the new selector string (e.g. `.translate3d` or `.no-translate3d`)
			$new-selector: #{'.' + $prefix + $feature};

			// Append the new selector
			// a) to the string if yep (e.g. `.translate3d.opacity`)
			// b) to the list if nope (e.g. `.no-translate3d, .no-opacity`)
			$selector: if($supports, $selector + $new-selector, append($selector, $new-selector + ' &', comma));

		}
	}

	@if $everything-okay == true {

		// 1.2 Define the placholder and print @content
		// =====================================



		// 1.3 Define feature selector(s) and extend the placeholder
		// =====================================
		@if $supports {
			#{$selector} & {
				@content;
			}
		}
		@else {
			#{$selector} {
				@content;
			}
		}

	}
}

//
// Alias for modernizr mixin with `$supports: true`
// @alias _modernizr
// @param {list} $features - comma-separated list of features to output
// @example scss
//  @include yep(csstransforms3d,csstransitions) { //Content here }
//
@mixin yep($features...) {
	@include _modernizr($features, $supports: true) {
		@content;
	}
}


//
// Alias for modernizr mixin with `$supports: false`
// @alias _modernizr
// @param {list} $features - comma-separated list of features to output
// @example scss
//  @include nope(csstransforms3d,csstransitions) { //Content here }
//
@mixin nope($features...) {
	@include _modernizr($features, $supports: false) {
		@content;
	}
}
